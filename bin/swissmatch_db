#!/usr/bin/env ruby
# encoding: utf-8

lib_dir = File.expand_path('../../lib', __FILE__)
$LOAD_PATH << lib_dir if File.directory?(lib_dir)

require 'active_record'
require 'swissmatch/autoload'
require 'swissmatch/activerecord'
require 'optparse'
require 'logger'

environment = ENV["RAILS_ENV"] || 'development'
log_file    = ENV["LOG"]
config_file = ENV["SWISSMATCH_DB_CONFIG"] || 'config/database.yml'

parser      = OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options] command"

  opts.on("-h", "--help", "Print help and exit") do |v|
    help
    exit
  end

  opts.on("-e", "--environment NAME", "Set the environment, used to determine the configuration (uses RAILS_ENV env variable, defaults to 'development')") do |name|
    environment = name
  end

  opts.on("-c", "--configuration PATH", "Path to the configuration file  (uses SWISSMATCH_DB_CONFIG env variable, defaults to 'config/database.yml')") do |path|
    config_file = path
  end

  opts.on("-l", "--log PATH", "Path to the log file. Use - for stdout and _ to suppress. (uses LOG env variable, defaults to 'log/ENVIRONMENT.log')") do |path|
    log_file = path
  end
end
parser.parse!

# determine log-file
log_file ||= "log/#{environment}.log" if File.writable?("log")
log_file = nil if log_file == '_'
log_file = $stdout if log_file == '-'

# establish connection and setup logging
abort("Configuration file not found, use -c switch to specify one. Tried '#{config_file}'") unless File.readable?(config_file)
SwissMatch::ActiveRecord.connect_from_config(config_file, environment)
ActiveRecord::Base.logger = Logger.new(log_file) if log_file

# handle commands
case ARGV.first
  when "create"
    SwissMatch::ActiveRecord::Migration.migrate(:up)
  when "destroy"
    SwissMatch::ActiveRecord::Migration.migrate(:down)
  when "seed"
    SwissMatch::ActiveRecord.seed
  when "help"
    help
  when nil
    puts "No command given"
    help
    abort
  else
    abort("Unknown command: #{ARGV.first}")
end

BEGIN {
  def help
    puts "Available commands are:", "  migrate", "  seed"
  end
}
